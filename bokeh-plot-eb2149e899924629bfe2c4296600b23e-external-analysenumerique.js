(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error() {
          console.error("failed to load " + url);
        }
    
        for (var i = 0; i < css_urls.length; i++) {
          var url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error;
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error;
          element.async = false;
          element.src = url;
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };var element = document.getElementById("e3187db5-20d1-4a94-bb49-1c99bd856820");
      if (element == null) {
        console.error("Bokeh: ERROR: autoload.js configured with elementid 'e3187db5-20d1-4a94-bb49-1c99bd856820' but no matching script tag was found. ")
        return false;
      }
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      var js_urls = ["https://cdn.pydata.org/bokeh/release/bokeh-1.3.4.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.3.4.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-tables-1.3.4.min.js", "https://cdn.pydata.org/bokeh/release/bokeh-gl-1.3.4.min.js"];
      var css_urls = [];
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"a85ac1bc-91cd-4fa7-ac57-2e32f7f49646":{"roots":{"references":[{"attributes":{"formatter":{"id":"1357","type":"BasicTickFormatter"},"ticker":{"id":"1318","type":"BasicTicker"}},"id":"1317","type":"LinearAxis"},{"attributes":{"overlay":{"id":"1360","type":"BoxAnnotation"}},"id":"1329","type":"BoxZoomTool"},{"attributes":{},"id":"1359","type":"BasicTickFormatter"},{"attributes":{},"id":"1332","type":"HelpTool"},{"attributes":{"grid_line_color":null,"ticker":{"id":"1318","type":"BasicTicker"}},"id":"1321","type":"Grid"},{"attributes":{},"id":"1327","type":"PanTool"},{"attributes":{},"id":"1361","type":"UnionRenderers"},{"attributes":{},"id":"1331","type":"ResetTool"},{"attributes":{"formatter":{"id":"1359","type":"BasicTickFormatter"},"ticker":{"id":"1323","type":"BasicTicker"}},"id":"1322","type":"LinearAxis"},{"attributes":{"callback":null,"end":10},"id":"1340","type":"Range1d"},{"attributes":{},"id":"1330","type":"SaveTool"},{"attributes":{"below":[{"id":"1317","type":"LinearAxis"}],"center":[{"id":"1321","type":"Grid"},{"id":"1326","type":"Grid"}],"left":[{"id":"1322","type":"LinearAxis"}],"plot_height":500,"plot_width":700,"renderers":[{"id":"1345","type":"GlyphRenderer"},{"id":"1350","type":"GlyphRenderer"}],"title":{"id":"1307","type":"Title"},"toolbar":{"id":"1333","type":"Toolbar"},"x_range":{"id":"1340","type":"Range1d"},"x_scale":{"id":"1313","type":"LinearScale"},"y_range":{"id":"1341","type":"Range1d"},"y_scale":{"id":"1315","type":"LinearScale"}},"id":"1306","subtype":"Figure","type":"Plot"},{"attributes":{"callback":null,"data":{"x":{"__ndarray__":"","dtype":"float64","shape":[1000]},"y":{"__ndarray__":"","dtype":"float64","shape":[1000]}},"selected":{"id":"1362","type":"Selection"},"selection_policy":{"id":"1361","type":"UnionRenderers"}},"id":"1342","type":"ColumnDataSource"},{"attributes":{},"id":"1328","type":"WheelZoomTool"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"1327","type":"PanTool"},{"id":"1328","type":"WheelZoomTool"},{"id":"1329","type":"BoxZoomTool"},{"id":"1330","type":"SaveTool"},{"id":"1331","type":"ResetTool"},{"id":"1332","type":"HelpTool"}]},"id":"1333","type":"Toolbar"},{"attributes":{"dimension":1,"grid_line_color":null,"ticker":{"id":"1323","type":"BasicTicker"}},"id":"1326","type":"Grid"},{"attributes":{"data_source":{"id":"1342","type":"ColumnDataSource"},"glyph":{"id":"1343","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1344","type":"Line"},"selection_glyph":null,"view":{"id":"1346","type":"CDSView"}},"id":"1345","type":"GlyphRenderer"},{"attributes":{},"id":"1318","type":"BasicTicker"},{"attributes":{"callback":null,"data":{"x":[0,0.5,1.0,1.5,2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,6.5,7.0,7.5,8.0,8.5,9.0,9.5,10.0],"y":[1,1.5,2.1581869214177796,2.741223606486024,2.8381768500201585,2.247627691171547,1.3472914037172572,0.6803872135100741,0.36181063549074427,0.243563028566177,0.21789199690698247,0.24879585692577305,0.3369529088118671,0.49871899433264966,0.7422403936230446,1.022028746631582,1.1991643763441677,1.111925147694087,0.7772290607908766,0.42315060193949017,0.21217360287359174]},"selected":{"id":"1364","type":"Selection"},"selection_policy":{"id":"1363","type":"UnionRenderers"}},"id":"1305","type":"ColumnDataSource"},{"attributes":{},"id":"1357","type":"BasicTickFormatter"},{"attributes":{},"id":"1315","type":"LinearScale"},{"attributes":{"align":"center","text":"M\\u00c3\\u00a9thode d&#x27;Euler"},"id":"1307","type":"Title"},{"attributes":{"line_color":"blue","line_width":2,"x":{"field":"x"},"y":{"field":"y"}},"id":"1343","type":"Line"},{"attributes":{},"id":"1313","type":"LinearScale"},{"attributes":{"args":{"slider":{"id":"1352","type":"Slider"},"source":{"id":"1305","type":"ColumnDataSource"}},"code":"\\n    F = (t, y) =&gt; Math.cos(t) * y;\\n    var a = 0;\\n    var b = 10;\\n    var data = source.data;\\n    data.x = new Array();\\n    data.y = new Array();\\n    var x = 0\\n    var y = 1;\\n    data.x.push(x);\\n    data.y.push(y);\\n    var step = (b-a)/slider.value;\\n    for (var k=0; k&lt;slider.value; k++){\\n        y += F(x, y) * step;\\n        x += step;\\n        data.x.push(x);\\n        data.y.push(y);\\n    }\\n    source.change.emit();\\n"},"id":"1353","type":"CustomJS"},{"attributes":{"children":[{"id":"1306","subtype":"Figure","type":"Plot"},{"id":"1352","type":"Slider"}]},"id":"1354","type":"Column"},{"attributes":{},"id":"1364","type":"Selection"},{"attributes":{"source":{"id":"1342","type":"ColumnDataSource"}},"id":"1346","type":"CDSView"},{"attributes":{"callback":{"id":"1353","type":"CustomJS"},"end":1000,"start":20,"title":"Nombre","value":20},"id":"1352","type":"Slider"},{"attributes":{},"id":"1363","type":"UnionRenderers"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"1360","type":"BoxAnnotation"},{"attributes":{},"id":"1323","type":"BasicTicker"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"y"}},"id":"1349","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y"}},"id":"1344","type":"Line"},{"attributes":{"line_alpha":0.5,"line_color":"orange","x":{"field":"x"},"y":{"field":"y"}},"id":"1348","type":"Line"},{"attributes":{"callback":null,"end":3},"id":"1341","type":"Range1d"},{"attributes":{},"id":"1362","type":"Selection"},{"attributes":{"data_source":{"id":"1305","type":"ColumnDataSource"},"glyph":{"id":"1348","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1349","type":"Line"},"selection_glyph":null,"view":{"id":"1351","type":"CDSView"}},"id":"1350","type":"GlyphRenderer"},{"attributes":{"source":{"id":"1305","type":"ColumnDataSource"}},"id":"1351","type":"CDSView"}],"root_ids":["1354"]},"title":"Bokeh Application","version":"1.3.4"}}';
                  var render_items = [{"docid":"a85ac1bc-91cd-4fa7-ac57-2e32f7f49646","roots":{"1354":"e3187db5-20d1-4a94-bb49-1c99bd856820"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        embed_document(root);
                        clearInterval(timer);
                      }
                      attempts++;
                      if (attempts > 100) {
                        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        clearInterval(timer);
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {} // ensure no trailing comma for IE
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();